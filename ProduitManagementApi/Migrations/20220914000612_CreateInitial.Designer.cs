// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProduitManagementApi.Contexts;

#nullable disable

namespace ProduitManagementApi.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20220914000612_CreateInitial")]
    partial class CreateInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProduitModels.Categories", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ProduitModels.FAQ", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("FAQs");
                });

            modelBuilder.Entity("ProduitModels.ProductPhotos", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("ProductPhotos");
                });

            modelBuilder.Entity("ProduitModels.Produit", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AvantagesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CertificationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ExpositionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FaqID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("MaxPrice")
                        .HasColumnType("real");

                    b.Property<float>("MinPrice")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductPhotosID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProduitDescriptionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProduitLivraisonID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<float>("Reduction")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("AvantagesID");

                    b.HasIndex("CategoriesID");

                    b.HasIndex("CertificationID");

                    b.HasIndex("ExpositionID");

                    b.HasIndex("FaqID");

                    b.HasIndex("ProductPhotosID");

                    b.HasIndex("ProduitDescriptionID");

                    b.HasIndex("ProduitLivraisonID");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("ProduitModels.ProduitAvantages", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("ProduitAvantages");
                });

            modelBuilder.Entity("ProduitModels.ProduitCertification", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("ProduitCertifications");
                });

            modelBuilder.Entity("ProduitModels.ProduitDescription", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("ProduitDescriptions");
                });

            modelBuilder.Entity("ProduitModels.ProduitExposition", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("ProduitExpositions");
                });

            modelBuilder.Entity("ProduitModels.ProduitLivraison", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("ProduitLivraisons");
                });

            modelBuilder.Entity("ProduitModels.Produit", b =>
                {
                    b.HasOne("ProduitModels.ProduitAvantages", "Avantages")
                        .WithMany()
                        .HasForeignKey("AvantagesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProduitModels.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProduitModels.ProduitCertification", "Certification")
                        .WithMany()
                        .HasForeignKey("CertificationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProduitModels.ProduitExposition", "Exposition")
                        .WithMany()
                        .HasForeignKey("ExpositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProduitModels.FAQ", "Faq")
                        .WithMany()
                        .HasForeignKey("FaqID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProduitModels.ProductPhotos", "ProductPhotos")
                        .WithMany()
                        .HasForeignKey("ProductPhotosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProduitModels.ProduitDescription", "ProduitDescription")
                        .WithMany()
                        .HasForeignKey("ProduitDescriptionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProduitModels.ProduitLivraison", "ProduitLivraison")
                        .WithMany()
                        .HasForeignKey("ProduitLivraisonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avantages");

                    b.Navigation("Categories");

                    b.Navigation("Certification");

                    b.Navigation("Exposition");

                    b.Navigation("Faq");

                    b.Navigation("ProductPhotos");

                    b.Navigation("ProduitDescription");

                    b.Navigation("ProduitLivraison");
                });
#pragma warning restore 612, 618
        }
    }
}
